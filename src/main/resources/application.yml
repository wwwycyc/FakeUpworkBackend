server:
  port: 8081

spring:
  profiles:
    active: dev
  main:
    allow-circular-references: true
  datasource:
    driver-class-name: ${fakeupwork.datasource.driver-class-name}
    url: jdbc:mysql://${fakeupwork.datasource.host}:${fakeupwork.datasource.port}/${fakeupwork.datasource.database}?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
    username: ${fakeupwork.datasource.username}
    password: ${fakeupwork.datasource.password}

  # 文件上传相关配置
  servlet:
    multipart:
      enabled: true  # 启用文件上传功能
      max-file-size: 10MB  # 设置单个文件的最大大小
      max-request-size: 10MB  # 设置请求体的最大大小
  # 上传文件的存储路径
  file:
    upload-dir: uploads  # 上传文件存储的目录，可以配置为服务器上的绝对路径

mybatis:
  # mapper配置文件
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.wyc.pojo.Entity
  configuration:
    # 开启驼峰命名
    map-underscore-to-camel-case: true
    # 启用 MyBatis SQL 日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  level:
    org.mybatis: debug  # 设置 MyBatis 的日志级别为 debug，输出详细的 SQL 日志
    com.wyc.server.mapper: debug  # 如果你想只输出特定包（例如你的 Mapper 包）的日志
    com.wyc.server.controller: debug  # 控制器日志级别为 debug，查看请求的详细信息
    com.wyc.server.service: debug  # 服务层日志级别为 debug，查看服务层的调用和处理
    root: debug  # 设置根日志级别为 debug，输出所有的日志信息

  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'  # 控制台输出日志的格式
    file: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'  # 文件输出日志的格式（如果有文件配置）

  file:
    name: logs/application.log  # 将日志输出到文件
    max-size: 10MB  # 文件大小超过10MB时会滚动
    max-history: 30  # 保留30个日志文件


wyc:
  jwt:
    # 设置 jwt 签名加密时使用的秘钥
    secret-key: fakeupworkwyc
    # 设置 jwt 过期时间
    ttl: 7200000
    # 设置前端传递过来的令牌名称
    token-name: token
